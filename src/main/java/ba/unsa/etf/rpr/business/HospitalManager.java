package ba.unsa.etf.rpr.business;

import ba.unsa.etf.rpr.Dao.DaoFactory;
import ba.unsa.etf.rpr.Domain.Blood;
import ba.unsa.etf.rpr.Domain.Donor;
import ba.unsa.etf.rpr.Domain.Hospital;
import ba.unsa.etf.rpr.Exceptions.BloodException;

import java.util.List;
/**
 * Business Logic Layer for Hospitals
 * @author Azra Žunić
 */

public class HospitalManager {
    public void validateHospitalName(String name) throws BloodException{
        if (name == null || name.length() > 20 || name.length() < 4){
            throw new BloodException("Name must contain between 4 and 20 characters");
        }
    }
    public Hospital add(Hospital b) throws BloodException {
        if (b.getId() != 0){
            throw new BloodException("Can't add hospital with ID. ID is autogenerated");
        }
        validateHospitalName(b.getName());

        try{
            return DaoFactory.hospitalDao().add(b);
        }catch (BloodException e){
            if (e.getMessage().contains("UQ_Name")){
                throw new BloodException("Hospital with the same name exists");
            }
            throw e;
        }
    }
    public List<Hospital> getAll() throws BloodException {
        return DaoFactory.hospitalDao().getAll();
    }
    public void delete(int id) throws BloodException{
        DaoFactory.hospitalDao().delete(id);
    }
    public Hospital getById(int Hospital_id) throws BloodException{
        return DaoFactory.hospitalDao().getById(Hospital_id);
    }

    public void update(Hospital q) throws BloodException{
        DaoFactory.hospitalDao().update(q);
    }

//    public Hospital add(Hospital q) throws BloodException{
//        return DaoFactory.hospitalDao().add(q);
//    }
    public Hospital searchByName(String name) throws BloodException {
        return DaoFactory.hospitalDao().searchByName(name);
    }
    public List<Hospital> searchByQuantityOnHand(int q) throws BloodException{
        return DaoFactory.hospitalDao().searchByQuantityOnHand(q);
    }
}
